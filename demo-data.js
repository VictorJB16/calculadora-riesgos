// Script para probar Firebase y generar datos de demostraciÃ³n
console.log('ðŸ”¥ Iniciando prueba de Firebase...');

// Datos de prueba para demostraciÃ³n
const sampleData = [
  {
    name: 'Vulnerabilidad en Servidor Web',
    asset: 'Servidor Apache Principal',
    description: 'Servidor web con versiÃ³n desactualizada presenta vulnerabilidades de seguridad',
    threat: 'ExplotaciÃ³n de vulnerabilidades conocidas (CVE-2023-XXXX)',
    vulnerability: 'Software Apache HTTP Server versiÃ³n 2.4.41 con parches de seguridad pendientes',
    method: 'quantitative',
    probability: 4,
    impact: 4,
    vulnerabilitySeverity: 7.5,
    controlEffectiveness: 60,
    detectionCapability: 3,
    responseCapability: 2,
    confidentialityImpact: 3,
    integrityImpact: 4,
    availabilityImpact: 5,
    existingControls: 'Firewall perimetral, IDS bÃ¡sico, logs de acceso',
    proposedControls: 'ActualizaciÃ³n de software, WAF, monitoreo 24/7, respuesta automÃ¡tica'
  },
  {
    name: 'Acceso No Autorizado Base de Datos',
    asset: 'Base de Datos MySQL Clientes',
    description: 'Riesgo de acceso no autorizado a informaciÃ³n sensible de clientes',
    threat: 'InyecciÃ³n SQL, credenciales dÃ©biles, acceso directo',
    vulnerability: 'ContraseÃ±as dÃ©biles en cuentas administrativas, puertos expuestos',
    method: 'qualitative',
    probability: 3,
    impact: 5,
    existingControls: 'AutenticaciÃ³n bÃ¡sica, backup diario',
    proposedControls: 'AutenticaciÃ³n multifactor, encriptaciÃ³n, auditorÃ­a de accesos'
  },
  {
    name: 'Ataque de Phishing a Empleados',
    asset: 'Cuentas de Correo Corporativo',
    description: 'Empleados pueden ser vÃ­ctimas de ataques de phishing dirigidos',
    threat: 'Correos maliciosos, suplantaciÃ³n de identidad, ingenierÃ­a social',
    vulnerability: 'Falta de capacitaciÃ³n en seguridad, ausencia de filtros avanzados',
    method: 'qualitative',
    probability: 4,
    impact: 3,
    existingControls: 'Filtro de spam bÃ¡sico, polÃ­ticas de seguridad',
    proposedControls: 'CapacitaciÃ³n mensual, simulacros de phishing, filtros avanzados'
  }
];

console.log('ðŸ“Š Datos de prueba preparados:');
console.log(`- ${sampleData.length} evaluaciones de riesgo`);
console.log('- MÃ©todos: Cualitativo y Cuantitativo');
console.log('- Sectores: Servidor Web, Base de Datos, Email');

// FunciÃ³n para simular el guardado en Firebase
function simulateFirebaseSave(data) {
  console.log('ðŸ’¾ Simulando guardado en Firebase...');
  
  data.forEach((item, index) => {
    setTimeout(() => {
      // Calcular riesgos
      const inherentRisk = item.method === 'qualitative' 
        ? item.probability * item.impact
        : (item.probability * (item.vulnerabilitySeverity || 1) * 
           ((item.confidentialityImpact + item.integrityImpact + item.availabilityImpact) / 3)) / 10;
      
      const controlReduction = (item.controlEffectiveness || 0) / 100;
      const residualRisk = inherentRisk * (1 - controlReduction);
      
      let riskLevel = 'Bajo';
      if (residualRisk >= 20) riskLevel = 'CrÃ­tico';
      else if (residualRisk >= 15) riskLevel = 'Alto';
      else if (residualRisk >= 10) riskLevel = 'Medio';
      else if (residualRisk >= 5) riskLevel = 'Bajo';
      else riskLevel = 'Muy Bajo';
      
      console.log(`âœ… [${index + 1}/${data.length}] ${item.name}`);
      console.log(`   ðŸ“ˆ Riesgo Inherente: ${inherentRisk.toFixed(2)}`);
      console.log(`   ðŸ“‰ Riesgo Residual: ${residualRisk.toFixed(2)}`);
      console.log(`   ðŸŽ¯ Nivel: ${riskLevel}`);
      console.log(`   ðŸ“… Fecha: ${new Date().toLocaleDateString()}`);
      console.log('');
      
    }, index * 500);
  });
}

// Ejecutar simulaciÃ³n
simulateFirebaseSave(sampleData);

console.log('ðŸŽ‰ Prueba completada! Ve a la aplicaciÃ³n para ver los resultados.');
